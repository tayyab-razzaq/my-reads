{"version":3,"sources":["utils/constants.js","components/utils/BookActions.js","components/utils/Book.js","components/home/BookShelf.js","utils/BooksAPI.js","components/home/Home.js","components/search/Search.js","routes.js","App.js","index.js"],"names":["BOOK_SHELVES","currentlyReading","wantToRead","read","BOOK_ACTIONS","Object","objectSpread","none","SEARCH_TERMS","BookActions","props","bookStatus","bookShelvesOptions","keys","map","bookStatusKey","bookStatusIndex","react_default","a","createElement","key","value","className","onChange","e","target","disabled","Book","title","authors","imageLinks","bookShelf","style","width","height","backgroundImage","concat","thumbnail","utils_BookActions","join","BookShelf","books","book","bookIndex","utils_Book","assign","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","shelf","id","method","Content-Type","body","JSON","stringify","search","query","Home","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onStatusChange","bookShelfIndex","oldValue","_this$state","state","bookShelves","BooksAPI","response","booksId","currentShelfBooks","filter","includes","setState","dataLoaded","_this2","_this3","_this$state2","home_BookShelf","onClick","history","push","Component","Search","searchBooks","shelvedBooks","Array","prototype","undefined","shelfBookIndex","findIndex","shelfBook","isValidQuery","searchTerm","toLowerCase","length","onSearchChange","type","placeholder","event","trim","routes","Switch","Route","exact","path","component","BooksApp","MainApp","Router","createBrowserHistory","src_App","ReactDOM","render","src_MainApp","document","getElementById"],"mappings":"sRAAaA,EAAe,CAC3BC,iBAAoB,oBACpBC,WAAc,eACdC,KAAQ,QAGIC,EAAYC,OAAAC,EAAA,EAAAD,CAAA,GACrBL,EADqB,CAExBO,KAAQ,SAGIC,EAAe,CAC3B,UAAW,MAAO,0BAA2B,YAAa,SAAU,WAAY,aAAc,SAC9F,YAAa,QAAS,WAAY,QAAS,YAAa,WAAY,WAAY,SAAU,OAAQ,UAClG,UAAW,QAAS,SAAU,cAAe,oBAAqB,QAAS,UAAW,QACtF,YAAa,aAAc,UAAW,OAAQ,UAAW,QAAS,UAAW,WAAY,SACzF,QAAS,SAAU,QAAS,SAAU,OAAQ,QAAS,UAAW,QAAS,OAAQ,SACnF,UAAW,QAAS,mBAAoB,OAAQ,SAAU,UAAW,QAAS,UAAW,YACzF,WAAY,aAAc,cAAe,SAAU,aAAc,cAAe,QAAS,QAAS,QAClG,WAAY,UAAW,SAAU,kBAAmB,cAAe,QAAS,WAAY,OAAQ,QAChG,OAAQ,UAAW,SAAU,WAAY,kBAAmB,kBAAmB,OCSjEC,EAzBK,SAAAC,GAEnB,IAAMC,EAAaP,EACbQ,EAAqBP,OAAOQ,KAAKF,GAAYG,IAAI,SAACC,EAAeC,GACtE,OACCC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAiBK,MAAON,GACnCJ,EAAWI,MAIf,OACCE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBACdL,EAAAC,EAAAC,cAAA,UAAQE,MAAOX,EAAMW,MAAOE,SAAU,SAACC,GAAD,OAAOd,EAAMa,SAASC,EAAEC,OAAOJ,SACpEJ,EAAAC,EAAAC,cAAA,UAAQE,MAAM,OAAOK,UAAQ,GAA7B,cACCd,KCaUe,EA3BF,SAAAjB,GAAS,IACdkB,EAAyClB,EAAzCkB,MAAOC,EAAkCnB,EAAlCmB,QAASC,EAAyBpB,EAAzBoB,WAAYC,EAAarB,EAAbqB,UACnC,OACCd,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,QACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAaU,MAAO,CAClCC,MAAO,IACPC,OAAQ,IACRC,gBAAe,QAAAC,OAAUN,EAAWO,UAArB,SAEhBpB,EAAAC,EAAAC,cAACmB,EAAD,CAAajB,MAAOU,EAAWR,SAAUb,EAAMa,YAEhDN,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcM,GAC7BX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBO,EAAUA,EAAQU,KAAK,MAAQ,OCqBnDC,EAnCG,SAAA9B,GAAS,IAEnBkB,EAAgBlB,EAAhBkB,MAAOa,EAAS/B,EAAT+B,MACd,OACCxB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACdL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,mBAAmBM,GACjCX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACdL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAEZmB,EAAM3B,IAAI,SAAC4B,EAAMC,GAChB,OACC1B,EAAAC,EAAAC,cAAA,MAAIC,IAAKuB,GACR1B,EAAAC,EAAAC,cAACyB,EAADvC,OAAAwC,OAAA,GACKH,EADL,CAECnB,SACC,SAACF,GAAD,OAAWX,EAAMa,SAASoB,EAAWtB,EAAOX,EAAMqB,YACnDA,UAAWrB,EAAMqB,oBCpBrBe,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACJA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAEjE,IAAMC,EAAU,CACfC,OAAU,mBACVC,cAAiBR,GAQLS,EAAS,kBACrBC,MAAK,GAAArB,OAAIU,EAAJ,UAAiB,CAACO,YACrBK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKpB,SAERqB,EAAS,SAACpB,EAAMqB,GAAP,OACrBN,MAAK,GAAArB,OAAIU,EAAJ,WAAAV,OAAiBM,EAAKsB,IAAM,CAChCC,OAAQ,MACRZ,QAAQhD,OAAAC,EAAA,EAAAD,CAAA,GACJgD,EADG,CAENa,eAAgB,qBAEjBC,KAAMC,KAAKC,UAAU,CAACN,YACpBL,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAEPU,EAAS,SAACC,GAAD,OACrBd,MAAK,GAAArB,OAAIU,EAAJ,WAAkB,CACtBmB,OAAQ,OACRZ,QAAQhD,OAAAC,EAAA,EAAAD,CAAA,GACJgD,EADG,CAENa,eAAgB,qBAEjBC,KAAMC,KAAKC,UAAU,CAACE,YACpBb,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SACjBF,KAAK,SAAAG,GAAI,OAAIA,EAAKpB,SCyCN+B,cA5Ed,SAAAA,EAAY9D,GAAO,IAAA+D,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,KAAAH,IAClBC,EAAApE,OAAAuE,EAAA,EAAAvE,CAAAsE,KAAAtE,OAAAwE,EAAA,EAAAxE,CAAAmE,GAAAM,KAAAH,KAAMjE,KAsBPqE,eAAiB,SAACC,EAAgBrC,EAAWtB,EAAO4D,GAEnD,GAAI5D,IAAU4D,EAAd,CAFgE,IAAAC,EAKjCT,EAAKU,MAA5B1C,EALwDyC,EAKxDzC,MACFC,EAN0DwC,EAKjDE,YACUJ,GAAZ,MAAqCrC,GAElD0C,EAAgB3C,EAAMrB,GAAOqC,KAAK,SAAA4B,GACjC,IAAMF,EAAc/E,OAAOQ,KAAKyE,GAAUxE,IAAI,SAAAC,GAC7C,IAAMwE,EAAUD,EAASvE,GAEnByE,EAAoB/C,EAAMgD,OAAO,SAAA/C,GAAI,OAAI6C,EAAQG,SAAShD,EAAKsB,MAErE,MAAO,CAACpC,MADW5B,EAAae,GACL0B,MAAO+C,EAAmBzD,UAAWhB,KAEjE0D,EAAKkB,SAAS,CAACP,oBApChBX,EAAKU,MAAQ,CACZ1C,MAAO,GACP2C,YAAa,GACbQ,YAAY,GANKnB,mFAUC,IAAAoB,EAAAlB,KAEnBU,IAAkB3B,KAAK,SAAAjB,GACtB,IAAM2C,EAAc/E,OAAOQ,KAAKb,GAAcc,IAAI,SAAAC,GAEjD,IAAMyE,EAAoB/C,EAAMgD,OAAO,SAAA/C,GAAI,OAAIA,EAAKqB,QAAUhD,IAE9D,MAAO,CAACa,MADW5B,EAAae,GACL0B,MAAO+C,EAAmBzD,UAAWhB,KAEjE8E,EAAKF,SAAS,CAAClD,QAAO2C,cAAaQ,YAAY,uCAwBxC,IAAAE,EAAAnB,KAAAoB,EAC0BpB,KAAKQ,MAAhCC,EADCW,EACDX,YACP,OAFQW,EACYH,WAKnB3E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACdL,EAAAC,EAAAC,cAAA,sBAEDF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAEb8D,EAAYtE,IAAI,SAACiB,EAAWiD,GAC3B,OACC/D,EAAAC,EAAAC,cAAC6E,EAAD3F,OAAAwC,OAAA,CACCzB,IAAK4D,GACDjD,EAFL,CAGCR,SACC,SAACoB,EAAWtB,EAAO4D,GAAnB,OAAgCa,EAAKf,eACpCC,EAAgBrC,EAAWtB,EAAO4D,UAMzChE,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACdL,EAAAC,EAAAC,cAAA,UAAQ8E,QAAS,kBAAMH,EAAKpF,MAAMwF,QAAQC,KAAK,aAA/C,gBAvBKlF,EAAAC,EAAAC,cAAA,mBAhDSiF,aCiIJC,cA/Hd,SAAAA,EAAY3F,GAAO,IAAA+D,EAAA,OAAApE,OAAAqE,EAAA,EAAArE,CAAAsE,KAAA0B,IAClB5B,EAAApE,OAAAuE,EAAA,EAAAvE,CAAAsE,KAAAtE,OAAAwE,EAAA,EAAAxE,CAAAgG,GAAAvB,KAAAH,KAAMjE,KAoBP4F,YAAc,WAAM,IAAApB,EACWT,EAAKU,MAA5BoB,EADYrB,EACZqB,aAAchC,EADFW,EACEX,MACrBc,EAAgBd,GAAOb,KAAK,SAAAjB,GAO1BA,EALGpC,OAAOwE,eAAepC,KAAW+D,MAAMC,WAE1ChE,EAAQA,EAAMgD,OAAO,SAAA/C,GAAI,YAAwBgE,IAApBhE,EAAKZ,cAGpBhB,IAAI,SAAA4B,GACjB,IAAIiE,EAAiBJ,EAAaK,UAAU,SAAAC,GAAS,OAAIA,EAAU7C,KAAOtB,EAAKsB,KAE/E,OADAtB,EAAKqB,OAA4B,IAApB4C,EAAwB,OAASJ,EAAaI,GAAgB5C,MACpErB,IAGA,GAET+B,EAAKkB,SAAS,CAAClD,aAtCEgC,EA0CnBqC,aAAe,SAAAvC,GACd,OAAO/D,EAAaiF,OAAO,SAAAsB,GAAU,OAAIA,EAAWC,cAActB,SAASnB,EAAMyC,iBAAgBC,OAAS,GA3CxFxC,EA8CnByC,eAAiB,SAAA3C,GAEZA,EAAM0C,OAAS,GAAKxC,EAAKqC,aAAavC,GACzCE,EAAKkB,SAAS,CAACpB,SAAQE,EAAK6B,aAE5B7B,EAAKkB,SAAS,CAAClD,MAAO,GAAI8B,WAnDTE,EAuDnBM,eAAiB,SAAC1D,EAAOsB,GAAc,IAC/BF,EAASgC,EAAKU,MAAd1C,MACF8D,EAAgB9B,EAAKU,MAArBoB,aACC7D,EAAOD,EAAME,GAGfD,EAAKqB,QAAU1C,GAInBgE,EAAgB3C,EAAMrB,GAAOqC,KAAK,WAE7B,SAAWhB,EAAKqB,MACnBwC,EAAaJ,KAAK,CAACnC,GAAItB,EAAKsB,GAAID,MAAO1C,IAG/B,SAAWA,EACnBkF,EAAeA,EAAad,OAAO,SAAAoB,GAAS,OAAInE,EAAKsB,KAAO6C,EAAU7C,KAItEuC,EAAazF,IAAI,SAAA+F,GAIhB,OAHIA,EAAU7C,KAAOtB,EAAKsB,KACzB6C,EAAU9C,MAAQ1C,GAEZwF,IAGTpE,EAAME,GAAWoB,MAAQ1C,EACzBoD,EAAKkB,SAAS,CAAClD,QAAO8D,oBAjFvB9B,EAAKU,MAAQ,CACZZ,MAAO,GACP9B,MAAO,GACP8D,aAAc,IANG9B,mFAUC,IAAAoB,EAAAlB,KAEnBU,IAAkB3B,KAAK,SAAAjB,GAEtB,IAAM8D,EAAe9D,EAAM3B,IAAI,SAAA4B,GAC9B,MAAO,CAACsB,GAAItB,EAAKsB,GAAID,MAAOrB,EAAKqB,SAElC8B,EAAKF,SAAS,CAACY,oDAuER,IAAAT,EAAAnB,KAAAoB,EACepB,KAAKQ,MAArB1C,EADCsD,EACDtD,MAAO8B,EADNwB,EACMxB,MACd,OACCtD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACdL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,eAAe2E,QAAS,kBAAMH,EAAKpF,MAAMwF,QAAQC,KAAK,OAAxE,SAGAlF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,8BAEdL,EAAAC,EAAAC,cAAA,SACCgG,KAAK,OACLC,YAAY,4BACZ/F,MAAOkD,EACPhD,SAAU,SAAA8F,GAAK,OAAIvB,EAAKoB,eAAeG,EAAM5F,OAAOJ,MAAMiG,aAG7DrG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,wBACdL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,cAEZmB,EAAM3B,IAAI,SAAC4B,EAAMC,GAChB,OACC1B,EAAAC,EAAAC,cAAA,MAAIC,IAAKuB,GACR1B,EAAAC,EAAAC,cAACyB,EAADvC,OAAAwC,OAAA,GACKH,EADL,CAECnB,SAAU,SAACF,GAAD,OAAWyE,EAAKf,eAAe1D,EAAOsB,IAChDZ,UAAWW,EAAKqB,sBApHNqC,6BCApBmB,EAAAtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,KACCvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjCvD,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,UAAWvB,KCM1BwB,EATE,WAEhB,OACC5G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbiG,YCCEO,mLAEJ,OACC7G,EAAAC,EAAAC,cAAC4G,EAAA,EAAD,CAAQ7B,QAAS8B,eAChB/G,EAAAC,EAAAC,cAAC8G,EAAD,cAJkB7B,aAUtB8B,IAASC,OAAOlH,EAAAC,EAAAC,cAACiH,EAAD,MAAYC,SAASC,eAAe","file":"static/js/main.63049e87.chunk.js","sourcesContent":["export const BOOK_SHELVES = {\n\t'currentlyReading': 'Currently Reading',\n\t'wantToRead': 'Want to Read',\n\t'read': 'Read'\n};\n\nexport const BOOK_ACTIONS = {\n\t...BOOK_SHELVES,\n\t'none': 'None',\n};\n\nexport const SEARCH_TERMS = [\n\t'Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 'Basketball', 'Bhagat',\n\t'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 'Classics', 'Comics', 'Cook', 'Cricket',\n\t'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 'Drama', 'Drawing', 'Dumas',\n\t'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 'Football', 'Future',\n\t'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 'Lahiri',\n\t'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate',\n\t'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River',\n\t'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun',\n\t'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS'\n];\n","import React from 'react';\nimport {BOOK_ACTIONS} from '../../utils/constants';\nimport PropTypes from 'prop-types';\n\nconst BookActions = props => {\n\t\n\tconst bookStatus = BOOK_ACTIONS;\n\tconst bookShelvesOptions = Object.keys(bookStatus).map((bookStatusKey, bookStatusIndex) => {\n\t\treturn (\n\t\t\t<option key={bookStatusIndex} value={bookStatusKey}>\n\t\t\t\t{bookStatus[bookStatusKey]}\n\t\t\t</option>\n\t\t);\n\t});\n\treturn (\n\t\t<div className=\"book-shelf-changer\">\n\t\t\t<select value={props.value} onChange={(e) => props.onChange(e.target.value)}>\n\t\t\t\t<option value='move' disabled>Move to...</option>\n\t\t\t\t{bookShelvesOptions}\n\t\t\t</select>\n\t\t</div>\n\t);\n}\n\nBookActions.propTypes = {\n\tvalue: PropTypes.string.isRequired,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default BookActions;","import React from 'react';\nimport BookActions from './BookActions';\nimport PropTypes from 'prop-types';\n\nconst Book = props => {\n\tconst {title, authors, imageLinks, bookShelf} = props;\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"book\">\n\t\t\t\t<div className=\"book-top\">\n\t\t\t\t\t<div className=\"book-cover\" style={{\n\t\t\t\t\t\twidth: 128,\n\t\t\t\t\t\theight: 192,\n\t\t\t\t\t\tbackgroundImage: `url(\"${imageLinks.thumbnail}\")`\n\t\t\t\t\t}}/>\n\t\t\t\t\t<BookActions value={bookShelf} onChange={props.onChange}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"book-title\">{title}</div>\n\t\t\t\t<div className=\"book-authors\">{authors ? authors.join(', ') : ''}</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nBook.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tbookShelf: PropTypes.string.isRequired,\n\timageLinks: PropTypes.object.isRequired,\n\tonChange: PropTypes.func.isRequired\n};\n\nexport default Book;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Book from '../utils/Book';\n\nconst BookShelf = props => {\n\t\n\tconst {title, books} = props;\n\treturn (\n\t\t<div className=\"bookshelf\">\n\t\t\t<h2 className=\"bookshelf-title\">{title}</h2>\n\t\t\t<div className=\"bookshelf-books\">\n\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t{\n\t\t\t\t\t\tbooks.map((book, bookIndex) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={bookIndex}>\n\t\t\t\t\t\t\t\t\t<Book\n\t\t\t\t\t\t\t\t\t\t{...book}\n\t\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t\t(value) => props.onChange(bookIndex, value, props.bookShelf)}\n\t\t\t\t\t\t\t\t\t\tbookShelf={props.bookShelf}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</ol>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nBookShelf.propTypes = {\n\ttitle: PropTypes.string.isRequired,\n\tbookShelf: PropTypes.string.isRequired,\n\tbooks: PropTypes.array.isRequired,\n\tonChange: PropTypes.func.isRequired,\n};\n\nexport default BookShelf;","const api = \"https://reactnd-books-api.udacity.com\";\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token)\n\ttoken = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n\t'Accept': 'application/json',\n\t'Authorization': token\n};\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, {headers})\n\t\t.then(res => res.json())\n\t\t.then(data => data.book);\n\nexport const getAll = () =>\n\tfetch(`${api}/books`, {headers})\n\t\t.then(res => res.json())\n\t\t.then(data => data.books);\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({shelf})\n\t}).then(res => res.json());\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({query})\n\t}).then(res => res.json())\n\t\t.then(data => data.books);\n","import React, {Component} from 'react';\nimport BookShelf from './BookShelf';\nimport {BOOK_SHELVES} from '../../utils/constants';\nimport * as BooksAPI from '../../utils/BooksAPI';\n\nclass Home extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tbooks: [],  // to store all books\n\t\t\tbookShelves: [],    // to store books categorized by shelves\n\t\t\tdataLoaded: false,  // flag to display the data when loaded\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\t// fetching all books\n\t\tBooksAPI.getAll().then(books => {\n\t\t\tconst bookShelves = Object.keys(BOOK_SHELVES).map(bookStatusKey => {\n\t\t\t\t// filter books by book shelf\n\t\t\t\tconst currentShelfBooks = books.filter(book => book.shelf === bookStatusKey);\n\t\t\t\tconst shelfTitle = BOOK_SHELVES[bookStatusKey];\n\t\t\t\treturn {title: shelfTitle, books: currentShelfBooks, bookShelf: bookStatusKey};\n\t\t\t});\n\t\t\tthis.setState({books, bookShelves, dataLoaded: true});\n\t\t});\n\t}\n\t\n\tonStatusChange = (bookShelfIndex, bookIndex, value, oldValue) => {\n\t\t// checking if the same option is selected again\n\t\tif (value === oldValue) {\n\t\t\treturn;\n\t\t}\n\t\tconst { books, bookShelves } = this.state;\n\t\tconst book = bookShelves[bookShelfIndex]['books'][bookIndex];\n\t\t// updating the book status\n\t\tBooksAPI.update(book, value).then(response => {\n\t\t\tconst bookShelves = Object.keys(response).map(bookStatusKey => {\n\t\t\t\tconst booksId = response[bookStatusKey];\n\t\t\t\t// filtering the current shelf books to update the state\n\t\t\t\tconst currentShelfBooks = books.filter(book => booksId.includes(book.id));\n\t\t\t\tconst shelfTitle = BOOK_SHELVES[bookStatusKey];\n\t\t\t\treturn {title: shelfTitle, books: currentShelfBooks, bookShelf: bookStatusKey};\n\t\t\t});\n\t\t\tthis.setState({bookShelves});\n\t\t});\n\t};\n\t\n\trender() {\n\t\tconst {bookShelves, dataLoaded} = this.state;\n\t\tif (!dataLoaded) {\n\t\t\treturn <div/>;\n\t\t}\n\t\treturn (\n\t\t\t<div className=\"list-books\">\n\t\t\t\t<div className=\"list-books-title\">\n\t\t\t\t\t<h1>MyReads</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"list-books-content\">\n\t\t\t\t\t{\n\t\t\t\t\t\tbookShelves.map((bookShelf, bookShelfIndex) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<BookShelf\n\t\t\t\t\t\t\t\t\tkey={bookShelfIndex}\n\t\t\t\t\t\t\t\t\t{...bookShelf}\n\t\t\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\t\t\t(bookIndex, value, oldValue) => this.onStatusChange(\n\t\t\t\t\t\t\t\t\t\t\tbookShelfIndex, bookIndex, value, oldValue)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"open-search\">\n\t\t\t\t\t<button onClick={() => this.props.history.push('/search')}>Add a book</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport * as BooksAPI from '../../utils/BooksAPI';\nimport Book from '../utils/Book';\nimport {SEARCH_TERMS} from '../../utils/constants';\n\nclass Search extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\tquery: '',  // to store the search query\n\t\t\tbooks: [],  // to store books based on search query\n\t\t\tshelvedBooks: []    // to store books which are in any shelf\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\t// fetching all books\n\t\tBooksAPI.getAll().then(books => {\n\t\t\t// saving shelf book id and shelf name to check book status\n\t\t\tconst shelvedBooks = books.map(book => {\n\t\t\t\treturn {id: book.id, shelf: book.shelf}\n\t\t\t});\n\t\t\tthis.setState({shelvedBooks});\n\t\t});\n\t}\n\t\n\tsearchBooks = () => {\n\t\tconst {shelvedBooks, query} = this.state;\n\t\tBooksAPI.search(query).then(books => {\n\t\t\t// checking if books returned properly\n\t\t\tif (Object.getPrototypeOf(books) === Array.prototype) {\n\t\t\t\t// filtering out the books without thumbnails\n\t\t\t\tbooks = books.filter(book => book.imageLinks !== undefined);\n\t\t\t\t\n\t\t\t\t// updating the book shelf status based on shelved books\n\t\t\t\tbooks = books.map(book => {\n\t\t\t\t\tlet shelfBookIndex = shelvedBooks.findIndex(shelfBook => shelfBook.id === book.id);\n\t\t\t\t\tbook.shelf = shelfBookIndex === -1 ? 'none' : shelvedBooks[shelfBookIndex].shelf;\n\t\t\t\t\treturn book;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tbooks = [];\n\t\t\t}\n\t\t\tthis.setState({books});\n\t\t});\n\t};\n\t\n\tisValidQuery = query => {\n\t\treturn SEARCH_TERMS.filter(searchTerm => searchTerm.toLowerCase().includes(query.toLowerCase())).length > 0;\n\t};\n\t\n\tonSearchChange = query => {\n\t\t// check if query length is greater than 2 or not and if query exist in search terms\n\t\tif (query.length > 2 && this.isValidQuery(query)) {\n\t\t\tthis.setState({query}, this.searchBooks);\n\t\t} else {\n\t\t\tthis.setState({books: [], query});\n\t\t}\n\t};\n\t\n\tonStatusChange = (value, bookIndex) => {\n\t\tconst {books} = this.state;\n\t\tlet {shelvedBooks} = this.state;\n\t\tconst book = books[bookIndex];\n\t\t\n\t\t// checking if the same option is selected again\n\t\tif (book.shelf === value) {\n\t\t\treturn;\n\t\t}\n\t\t// updating the book status\n\t\tBooksAPI.update(book, value).then(() => {\n\t\t\t// check if new book added to shelf\n\t\t\tif ('none' === book.shelf) {\n\t\t\t\tshelvedBooks.push({id: book.id, shelf: value});\n\t\t\t}\n\t\t\t// check if book is deleted from every shelf\n\t\t\telse if ('none' === value) {\n\t\t\t\tshelvedBooks = shelvedBooks.filter(shelfBook => book.id !== shelfBook.id);\n\t\t\t}\n\t\t\t// check if book shelf is updated\n\t\t\telse {\n\t\t\t\tshelvedBooks.map(shelfBook => {\n\t\t\t\t\tif (shelfBook.id === book.id) {\n\t\t\t\t\t\tshelfBook.shelf = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn shelfBook;\n\t\t\t\t})\n\t\t\t}\n\t\t\tbooks[bookIndex].shelf = value;\n\t\t\tthis.setState({books, shelvedBooks});\n\t\t});\n\t};\n\t\n\trender() {\n\t\tconst {books, query} = this.state;\n\t\treturn (\n\t\t\t<div className=\"search-books\">\n\t\t\t\t<div className=\"search-books-bar\">\n\t\t\t\t\t<button className=\"close-search\" onClick={() => this.props.history.push('/')}>\n\t\t\t\t\t\tClose\n\t\t\t\t\t</button>\n\t\t\t\t\t<div className=\"search-books-input-wrapper\">\n\t\t\t\t\t\t{/* Search will be called on minimum 3 characters*/}\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Search by title or author\"\n\t\t\t\t\t\t\tvalue={query}\n\t\t\t\t\t\t\tonChange={event => this.onSearchChange(event.target.value.trim())}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"search-books-results\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tbooks.map((book, bookIndex) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li key={bookIndex}>\n\t\t\t\t\t\t\t\t\t\t<Book\n\t\t\t\t\t\t\t\t\t\t\t{...book}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(value) => this.onStatusChange(value, bookIndex)}\n\t\t\t\t\t\t\t\t\t\t\tbookShelf={book.shelf}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Search;","import React from 'react';\nimport {Home, Search} from './components';\nimport {Route, Switch} from 'react-router-dom';\n\nexport default (\n\t<Switch>\n\t\t<Route exact path=\"/\" component={Home}/>\n\t\t<Route exact path=\"/search\" component={Search}/>\n\t</Switch>\n);","import React from 'react'\nimport './App.css'\nimport routes from './routes';\n\nconst BooksApp = () => {\n\t\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t{routes}\n\t\t</div>\n\t);\n};\n\nexport default BooksApp\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Router, Switch} from \"react-router-dom\";\nimport App from './App';\n\nimport { createBrowserHistory } from 'history';\n\n\nclass MainApp extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Router history={createBrowserHistory()}>\n\t\t\t\t<App/>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n"],"sourceRoot":""}